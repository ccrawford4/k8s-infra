name: Deploy Helm Charts

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
    secrets:
      AWS_ACCOUNT:
        required: true
      # AWS_ROLE_TO_ASSUME:
      #   required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true
      AWS_EKS_CLUSTER_NAME:
        required: true
      MYSQL_DATABASE:
        required: true
      MYSQL_USERNAME:
        required: true
      MYSQL_PASSWORD:
        required: true
      MYSQL_ROOT_PASSWORD:
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig \
            --region ${{ secrets.AWS_REGION }} \
            --name ${{ secrets.AWS_EKS_CLUSTER_NAME }} \
            --kubeconfig ./kubeconfig.yaml

      - name: Create environment namespace if not exists
        run: |
          kubectl --kubeconfig=./kubeconfig.yaml get namespace ${{ inputs.environment }} || kubectl --kubeconfig=./kubeconfig.yaml create namespace ${{ inputs.environment }}

      - name: Create argocd namespace if not exists
        run: |
          kubectl --kubeconfig=./kubeconfig.yaml get namespace argocd || kubectl --kubeconfig=./kubeconfig.yaml create namespace argocd

      - name: Deploy ArgoCD
        run: |
          kubectl --kubeconfig=./kubeconfig.yaml apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

      - name: Set charts to deploy
        id: set-charts
        run: |
          if [ ${{ inputs.environment }} == "qa" ]; then
            echo "charts=searchapi mysql web redis" >> $GITHUB_ENV
          else
            echo "charts=searchapi web redis" >> $GITHUB_ENV
          fi

      # - name: Deploy searchapi chart
      #   if: contains(env.charts, 'searchapi')
      #   uses: bitovi/github-actions-deploy-eks-helm@v1.2.12
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-west-2
      #     cluster-name: mycluster
      #     namespace: ${{ inputs.environment }}
      #     chart-path: ./charts/searchapi
      #     name: searchapi
      #     values: containerPort=8080,DNS=${{ secrets.DSN }},REDIS_HOST=${{ secrets.REDIS_HOST }},REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}

      - name: Deploy mysql chart
        if: contains(env.charts, 'mysql')
        uses: vimeda/helm@v1.7.0
        with:
          release: mysql
          namespace: ${{ inputs.environment }}
          chart: ./charts/mysql
          values: |
            database: ${{ secrets.MYSQL_DATABASE }}
            username: ${{ secrets.MYSQL_USERNAME }}
            password: ${{ secrets.MYSQL_PASSWORD }}
            root_password: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        env:
          KUBECONFIG: ./kubeconfig.yaml

      - name: Deploy redis chart
        if: contains(env.charts, 'redis')
        uses: vimeda/helm@v1.7.0
        with:
          release: redis
          namespace: ${{ inputs.environment }}
          chart: ./charts/redis
          values: |
            password: ${{ secrets.REDIS_PASSWORD }}
        env:
          KUBECONFIG: ./kubeconfig.yaml

      - name: Deploy searchapi chart
        if: contains(env.charts, 'searchapi')
        uses: vimeda/helm@v1.7.0
        with:
          release: searchapi
          namespace: ${{ inputs.environment }}
          chart: ./charts/searchapi
          values: |
            containerPort: 8080
            DSN: ${{ secrets.DSN }}
            REDIS_HOST: "redis.${{ inputs.environment }}.svc.cluster.local:6379"
            REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
        env:
          KUBECONFIG: ./kubeconfig.yaml

          # - name: Deploy web chart
      #   if: contains(env.charts, 'web')
      #   uses: bitovi/github-actions-deploy-eks-helm@v1.2.12
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-west-2
      #     cluster-name: mycluster
      #     namespace: ${{ inputs.environment }}
      #     chart-path: ./charts/web
      #     name: web
      #     values: image.tag=latest
      # - name: Deploy redis chart
      #   if: contains(env.charts, 'redis')
      #   uses: bitovi/github-actions-deploy-eks-helm@v1.2.12
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-west-2
      #     cluster-name: mycluster
      #     namespace: ${{ inputs.environment }}
      #     chart-path: ./charts/redis
      #     name: redis
      #     values: redis.username=${{ secrets.REDIS_USERNAME }},redis.password=${{ secrets.REDIS_PASSWORD }},image.tag=latest
